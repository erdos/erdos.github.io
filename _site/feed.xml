<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>personal web site of janos erdos</title>
    <description>Personal web space.
</description>
    <link>http://erdos.github.io/</link>
    <atom:link href="http://erdos.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 19 May 2016 23:41:51 +0200</pubDate>
    <lastBuildDate>Thu, 19 May 2016 23:41:51 +0200</lastBuildDate>
    <generator>Jekyll v3.1.3</generator>
    
      <item>
        <title>Clojure collection quirks - A REFERENCE</title>
        <description>&lt;p&gt;Iâ€™ve always wanted to create a reference on clojure collections for a long time now.&lt;/p&gt;

&lt;h3 id=&quot;functions&quot;&gt;Functions&lt;/h3&gt;

&lt;p&gt;This table contains the most common functions and collections.&lt;/p&gt;

&lt;table class=&quot;features&quot;&gt;
&lt;thead&gt;
&lt;tr class=&quot;c&quot;&gt;&lt;td colspan=&quot;2&quot; class=&quot;z&quot;&gt;&lt;/td&gt;&lt;td colspan=&quot;3&quot;&gt;Seq&lt;/td&gt;&lt;td colspan=&quot;2&quot;&gt;Vector&lt;/td&gt;&lt;td colspan=&quot;2&quot;&gt;Map&lt;/td&gt;&lt;td colspan=&quot;2&quot;&gt;Set&lt;/td&gt;&lt;/tr&gt;
&lt;tr class=&quot;sm&quot;&gt;&lt;th class=&quot;z&quot;&gt;&lt;/th&gt;&lt;th&gt;nil&lt;/th&gt;&lt;th&gt;&#39;(1 2 3)&lt;/th&gt;&lt;th&gt;(range 5)&lt;/th&gt;&lt;th&gt;(range)&lt;br /&gt;(lazy-seq)&lt;br /&gt;(cons 1 (lazy-seq))&lt;/th&gt;&lt;th&gt;[1 2 3]&lt;/th&gt;&lt;th&gt;Persistent&lt;br /&gt;Queue/EMPTY&lt;/th&gt;&lt;th&gt;(hash-map)&lt;br /&gt;(array-map)&lt;/th&gt;&lt;th&gt;(sorted-map)&lt;/th&gt;&lt;th&gt;#{}&lt;/th&gt;&lt;th&gt;(sorted-set)&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;
&lt;tbody&gt;
  &lt;tr class=&quot;sm&quot;&gt;&lt;td&gt;type&lt;/td&gt;&lt;td class=&quot;nil&quot;&gt;nil&lt;/td&gt;&lt;td&gt;Persistent&lt;br /&gt;List&lt;/td&gt;&lt;td&gt;LongRange&lt;/td&gt;&lt;td&gt;Iterate&lt;br /&gt;or LazySeq&lt;br /&gt;or Cons&lt;/td&gt;&lt;td&gt;Persistent&lt;br /&gt;Vector&lt;/td&gt;&lt;td&gt;Persistent&lt;br /&gt;Queue&lt;/td&gt;&lt;td&gt;Persistent&lt;br /&gt;ArrayMap&lt;br /&gt;or&amp;nbsp;HashMap&lt;/td&gt;&lt;td&gt;Persistent&lt;br /&gt;TreeMap&lt;/td&gt;&lt;td&gt;Persistent&lt;br /&gt;HashSet&lt;/td&gt;&lt;td&gt;Persistent&lt;br /&gt;TreeSet&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;ifn?&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool t&quot;&gt;true&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool t&quot;&gt;true&lt;/td&gt;&lt;td class=&quot;bool t&quot;&gt;true&lt;/td&gt;&lt;td class=&quot;bool t&quot;&gt;true&lt;/td&gt;&lt;td class=&quot;bool t&quot;&gt;true&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;associative?&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool t&quot;&gt;true&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool t&quot;&gt;true&lt;/td&gt;&lt;td class=&quot;bool t&quot;&gt;true&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;map?&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool t&quot;&gt;true&lt;/td&gt;&lt;td class=&quot;bool t&quot;&gt;true&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;sequential?&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool t&quot;&gt;true&lt;/td&gt;&lt;td class=&quot;bool t&quot;&gt;true&lt;/td&gt;&lt;td class=&quot;bool t&quot;&gt;true&lt;/td&gt;&lt;td class=&quot;bool t&quot;&gt;true&lt;/td&gt;&lt;td class=&quot;bool t&quot;&gt;true&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;coll?&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool t&quot;&gt;true&lt;/td&gt;&lt;td class=&quot;bool t&quot;&gt;true&lt;/td&gt;&lt;td class=&quot;bool t&quot;&gt;true&lt;/td&gt;&lt;td class=&quot;bool t&quot;&gt;true&lt;/td&gt;&lt;td class=&quot;bool t&quot;&gt;true&lt;/td&gt;&lt;td class=&quot;bool t&quot;&gt;true&lt;/td&gt;&lt;td class=&quot;bool t&quot;&gt;true&lt;/td&gt;&lt;td class=&quot;bool t&quot;&gt;true&lt;/td&gt;&lt;td class=&quot;bool t&quot;&gt;true&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;counted?&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool t&quot;&gt;true&lt;/td&gt;&lt;td class=&quot;bool t&quot;&gt;true&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool t&quot;&gt;true&lt;/td&gt;&lt;td class=&quot;bool t&quot;&gt;true&lt;/td&gt;&lt;td class=&quot;bool t&quot;&gt;true&lt;/td&gt;&lt;td class=&quot;bool t&quot;&gt;true&lt;/td&gt;&lt;td class=&quot;bool t&quot;&gt;true&lt;/td&gt;&lt;td class=&quot;bool t&quot;&gt;true&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;list?&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool t&quot;&gt;true&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool t&quot;&gt;true&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;seq?&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool t&quot;&gt;true&lt;/td&gt;&lt;td class=&quot;bool t&quot;&gt;true&lt;/td&gt;&lt;td class=&quot;bool t&quot;&gt;true&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;vector?&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool t&quot;&gt;true&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;map?&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool t&quot;&gt;true&lt;/td&gt;&lt;td class=&quot;bool t&quot;&gt;true&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;set?&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool t&quot;&gt;true&lt;/td&gt;&lt;td class=&quot;bool t&quot;&gt;true&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;sorted?&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool t&quot;&gt;true&lt;/td&gt;&lt;td class=&quot;bool f&quot;&gt;false&lt;/td&gt;&lt;td class=&quot;bool t&quot;&gt;true&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;interfaces&quot;&gt;Interfaces&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;interface&lt;/th&gt;
      &lt;th&gt;description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;IMeta&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;The object has meta information accessible via the &lt;code class=&quot;highlighter-rouge&quot;&gt;(meta x)&lt;/code&gt; function.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;IObj&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Indicates that meta information can be added to object (&lt;code class=&quot;highlighter-rouge&quot;&gt;with-meta&lt;/code&gt; function)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Counted&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;This collection supports fast counting (&lt;code class=&quot;highlighter-rouge&quot;&gt;(count x)&lt;/code&gt; function call).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;IEditableCollection&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;A transient version of the collection can be created with the &lt;code class=&quot;highlighter-rouge&quot;&gt;(transient x)&lt;/code&gt; call.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;IFn&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Collection can be called just like a function.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;IKeywordLookup&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Collection supports indexing by keywords.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ILookup&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Collection supports access by index (via &lt;code class=&quot;highlighter-rouge&quot;&gt;get&lt;/code&gt; function with default value.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;IPending&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Supports &lt;code class=&quot;highlighter-rouge&quot;&gt;realized?&lt;/code&gt; function.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;IPersistentCollection&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Persistent collections have support for &lt;code class=&quot;highlighter-rouge&quot;&gt;conj&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;empty&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;count&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;equals&lt;/code&gt;.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ISeq&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Sequences have support for &lt;code class=&quot;highlighter-rouge&quot;&gt;first&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;next&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;rest&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;cons&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;etc..&lt;/p&gt;

</description>
        <pubDate>Wed, 18 May 2016 12:00:02 +0200</pubDate>
        <link>http://erdos.github.io/2016/05/18/clojure-collections-0.html</link>
        <guid isPermaLink="true">http://erdos.github.io/2016/05/18/clojure-collections-0.html</guid>
        
        <category>clojure</category>
        
        <category>java</category>
        
        <category>interop</category>
        
        <category>programming</category>
        
        <category>immutable</category>
        
        
      </item>
    
      <item>
        <title>Clojure collection quirks - Maps</title>
        <description>&lt;h2 id=&quot;maps&quot;&gt;Maps&lt;/h2&gt;

&lt;p&gt;Map data structures in Clojure are much like associative arrays in other languages. They, however contain many never seen possibilities.&lt;/p&gt;

&lt;h3 id=&quot;creation&quot;&gt;Creation&lt;/h3&gt;

&lt;p&gt;You can create maps with two syntaxes. Either by calling the &lt;code class=&quot;highlighter-rouge&quot;&gt;hash-map&lt;/code&gt; function or by writing the &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;&lt;/code&gt; map literal.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-clojure&quot; data-lang=&quot;clojure&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:one&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:a,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:two&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:b,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:three&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:c,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:four&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;One interesting fact when working with maps is that all maps with &lt;em&gt;8 or less entries&lt;/em&gt; maps will be created as a &lt;code class=&quot;highlighter-rouge&quot;&gt;PersistentArrayMap&lt;/code&gt; an all larger maps will be a &lt;code class=&quot;highlighter-rouge&quot;&gt;PersistentHashMap&lt;/code&gt;. The two differ only by inte internal representation: it seems like that small maps are better stored in an array.&lt;/p&gt;

&lt;h3 id=&quot;sequences&quot;&gt;Sequences&lt;/h3&gt;

&lt;p&gt;Calling &lt;code class=&quot;highlighter-rouge&quot;&gt;seq&lt;/code&gt; on a map returns a sequence of its key-value pairs, called entries. They are instances of &lt;code class=&quot;highlighter-rouge&quot;&gt;clojure.lang.MapEntry&lt;/code&gt; but they also act like vectors.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-clojure&quot; data-lang=&quot;clojure&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;seq&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:one&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:two&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:three&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:four&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clojure.lang.MapEntry&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;vector?&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;access&quot;&gt;Access&lt;/h3&gt;

&lt;p&gt;You can acces a value for a given key in a map with the &lt;code class=&quot;highlighter-rouge&quot;&gt;get&lt;/code&gt; function.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-clojure&quot; data-lang=&quot;clojure&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:a&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:b&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:a&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:b&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:a&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:b&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:c&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:default-value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:default-value&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Maps also act like functions (they implement the &lt;code class=&quot;highlighter-rouge&quot;&gt;IFn&lt;/code&gt; interface). For example:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-clojure&quot; data-lang=&quot;clojure&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:even&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:odd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
     &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;even?&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
          &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
 &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:even&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:odd&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:even&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:odd&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Please note that calling a map on a missing key returns &lt;code class=&quot;highlighter-rouge&quot;&gt;nil&lt;/code&gt; or the default value given as an optional third argument.&lt;/p&gt;

&lt;h3 id=&quot;modify&quot;&gt;Modify&lt;/h3&gt;

&lt;p&gt;Use the &lt;code class=&quot;highlighter-rouge&quot;&gt;assoc&lt;/code&gt; function to associate a new value with a given key.&lt;/p&gt;

</description>
        <pubDate>Wed, 18 May 2016 00:00:00 +0200</pubDate>
        <link>http://erdos.github.io/2016/05/18/clojure-collections-2.html</link>
        <guid isPermaLink="true">http://erdos.github.io/2016/05/18/clojure-collections-2.html</guid>
        
        <category>clojure</category>
        
        <category>programming</category>
        
        <category>immutable</category>
        
        
      </item>
    
      <item>
        <title>Clojure collection quirks - Vectors</title>
        <description>&lt;p&gt;Working with Clojure collections is a pleasure. Yet, sometimes one may run into unexpected behaviors. In this series, we take a look at the most simple Clojure data structures.&lt;/p&gt;

&lt;h2 id=&quot;vectors&quot;&gt;Vectors&lt;/h2&gt;

&lt;p&gt;Vectors are sequential collections with constant time random access capability.&lt;/p&gt;

&lt;p&gt;One can also view vectors as integer to element mappings. Examples:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-clojure&quot; data-lang=&quot;clojure&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:zero&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:one&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:two&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:three&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:one&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:one&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;functions&quot;&gt;Functions&lt;/h3&gt;

&lt;p&gt;Vectors also act like functions (they implement the &lt;code class=&quot;highlighter-rouge&quot;&gt;clojure.lang.IFn&lt;/code&gt; interface):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-clojure&quot; data-lang=&quot;clojure&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;v1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:one&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;But be aware not to index out of bounds.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-clojure&quot; data-lang=&quot;clojure&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;v1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IndexOutOfBoundsException!!!&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;To avoid IOBE you should use the &lt;code class=&quot;highlighter-rouge&quot;&gt;(get)&lt;/code&gt; function. You can also add a default value that is returned when the given index is not in the vector.&lt;/p&gt;

&lt;h3 id=&quot;modify&quot;&gt;Modify&lt;/h3&gt;

&lt;p&gt;We can also modify an item on an index of a vector:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-clojure&quot; data-lang=&quot;clojure&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;assoc&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:One&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:zero&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:One&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:two&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;:three&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Thatâ€™s right, one can change an item on an index of a vector just like with a map.&lt;/p&gt;

&lt;p&gt;How is about removing an item from a vector?&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-clojure&quot; data-lang=&quot;clojure&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;dissoc&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ClassCastException!!&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You can not call &lt;code class=&quot;highlighter-rouge&quot;&gt;dissoc&lt;/code&gt; on a vector because that could not remove an item without affecting the indices of all other items after the given index. To remove an item, first you need to split the vector into two parts (calling &lt;code class=&quot;highlighter-rouge&quot;&gt;subvec&lt;/code&gt;) and then create a vector from the concatenation of the result.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-clojure&quot; data-lang=&quot;clojure&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;defn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;without&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;vec&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;subvec&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;subvec&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;inc&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;as-queues&quot;&gt;As Queues&lt;/h3&gt;

&lt;p&gt;Vectors are often used as queues. The &lt;code class=&quot;highlighter-rouge&quot;&gt;conj&lt;/code&gt; function appends a value to the end of the vector. The &lt;code class=&quot;highlighter-rouge&quot;&gt;peek&lt;/code&gt; function returs the last item of the vector in constant time. (The &lt;code class=&quot;highlighter-rouge&quot;&gt;last&lt;/code&gt; function is linear time thus much slower usually.) The &lt;code class=&quot;highlighter-rouge&quot;&gt;pop&lt;/code&gt; function drops the last item from a vector.&lt;/p&gt;

</description>
        <pubDate>Wed, 18 May 2016 00:00:00 +0200</pubDate>
        <link>http://erdos.github.io/2016/05/18/clojure-collections-1.html</link>
        <guid isPermaLink="true">http://erdos.github.io/2016/05/18/clojure-collections-1.html</guid>
        
        <category>clojure</category>
        
        <category>programming</category>
        
        <category>immutable</category>
        
        
      </item>
    
      <item>
        <title>Indexed data structures in Clojure</title>
        <description>&lt;p&gt;When rumbling in the &lt;a href=&quot;https://github.com/clojure/clojure/tree/master/src/jvm/clojure/lang&quot;&gt;Java source codes&lt;/a&gt; of the Clojure language
I found the mysterious &lt;a href=&quot;https://github.com/clojure/clojure/blob/master/src/jvm/clojure/lang/IndexedSeq.java&quot;&gt;IndexedSeq&lt;/a&gt; interface. What is it good for?&lt;/p&gt;

&lt;h2 id=&quot;details&quot;&gt;Details&lt;/h2&gt;

&lt;p&gt;It provides the &lt;code class=&quot;highlighter-rouge&quot;&gt;int index()&lt;/code&gt; method for collections to return the current index of the sequence on them.
It extends &lt;code class=&quot;highlighter-rouge&quot;&gt;ISeq&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Sequential&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Counted&lt;/code&gt; interfaces and thus &lt;code class=&quot;highlighter-rouge&quot;&gt;IPersistentCollection&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Seqable&lt;/code&gt; too.&lt;/p&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;

&lt;p&gt;One can easily create a wrapper class that gives an indexed functionality to any collection. The following example does just that.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-clojure&quot; data-lang=&quot;clojure&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;defn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;indexed&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Creates an indexed data structure. You can access current index
  with the .index method call.&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;indexed&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;long&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;reify&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clojure.lang.IndexedSeq&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clojure.lang.Counted&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clojure.lang.ISeq&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;if-let&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;indexed&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;inc&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;more&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;indexed&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.more&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;seq&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;inc&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cons&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;indexed&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cons&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;indexed&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;equiv&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;that&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;that&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;seq&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;seq&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clojure.lang.Sequential&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;testing&quot;&gt;Testing&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-clojure&quot; data-lang=&quot;clojure&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;indexed&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;105&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;=&amp;gt; (5 6 7 8 ... 104)
&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.index&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;=&amp;gt; 0
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.index&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;=&amp;gt; 1
&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.index&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;take-last&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;; =&amp;gt; 98
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;etc.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
        <pubDate>Mon, 16 May 2016 01:00:02 +0200</pubDate>
        <link>http://erdos.github.io/2016/05/16/clojure-indexed.html</link>
        <guid isPermaLink="true">http://erdos.github.io/2016/05/16/clojure-indexed.html</guid>
        
        <category>clojure</category>
        
        <category>java</category>
        
        <category>interop</category>
        
        <category>programming</category>
        
        <category>immutable</category>
        
        
      </item>
    
  </channel>
</rss>
